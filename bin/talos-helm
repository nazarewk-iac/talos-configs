#!/usr/bin/env bash
set -eEuo pipefail
test -z "${DEBUG:-}" || set -x
test -n "${PRJ_ROOT:-}" || eval "$(cd "${BASH_SOURCE[0]%/*}" && direnv export bash)"

if test -z "${workdir:-}"; then
  if test "${#BASH_SOURCE[@]}" -gt 1; then
    workdir="${BASH_SOURCE[1]%/*}"
  else
    workdir="${PRJ_ROOT}/k8s/$1"
    shift 1
  fi
fi

if test -z "${namespace:-}"; then
  namespace="$1"
  shift 1
fi
if test -z "${release:-}"; then
  release="$1"
  shift 1
fi

chart="${workdir}"
args=(--namespace "$namespace")
cmd=""
cmds=()

while [[ $# -gt 0 ]]; do
  case "$1" in
  -*)
    args+=("$1")
    ;;
  *)
    if test "${#cmds[@]}" -gt 0; then
      args+=("$1")
    else
      cmd="$1"
    fi
    ;;
  esac
  shift
done

if test "${cmd}" == install; then
  cmd="upgrade"
fi
test -z "${cmd}" || cmds=("${cmd}")

case "${cmd}" in
template | install | upgrade)
  args+=("${release}" "${chart}")
  ;;
esac

if test "${cmd}" == upgrade; then
  args+=(--install)
fi

case "${cmd}" in
install | upgrade)
  kubectl apply -f "${chart}/namespace.yaml"
  ;;
esac

if test "${cmd}" == "upgrade"; then
  # --detailed-exitcode
  helm diff "${cmds[@]}" "${args[@]}"
fi

helm "${cmds[@]}" "${args[@]}"
