apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nix-disks
  namespace: nix-system
  labels:
    k8s-app: nix-disks
spec:
  selector:
    matchLabels:
      name: nix-disks
  template:
    metadata:
      labels:
        name: nix-disks
    spec:

      terminationGracePeriodSeconds: 5
      tolerations:
        # these tolerations are to have the daemonset runnable on control plane nodes
        # remove them if your control plane nodes should not run pods
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      initContainers:
        - name: wait-nix-daemon
          image: docker.io/nixos/nix
          command: ["/usr/bin/env", "bash"]
          args:
            - '-c'
            - |-
              set -xeEuo pipefail
              until test -S /nix/var/nix/daemon-socket/socket ; do
                sleep $((RANDOM % 3))
              done
          volumeMounts:
            - name: host-nix-socket
              mountPath: /nix/var/nix/daemon-socket/socket
          resources:
            limits:
              memory: 16Mi
            requests:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: nix
          image: docker.io/nixos/nix
          command: ["/usr/bin/env", "bash"]
          args:
            - '-c'
            - |-
              set -xeEuo pipefail
              nix_args=(
                --show-trace
                --print-build-logs
                --verbose
              )
              cp -rTL /src/..data ./src
              ls -la ./src
              nix develop "${nix_args[@]}" /root/src --command echo 'Hello World!'
              exec sleep infinity
          workingDir: /root
          securityContext:
            privileged: true
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 50m
              memory: 32Mi
          envFrom:
            - configMapRef:
                name: nix-client-env
            - secretRef:
                name: nix-client-env
          volumeMounts:
            - name: src
              mountPath: /src
            - name: etc-nix
              mountPath: /etc/nix
            - name: host-nix-store
              mountPath: /nix/store
            - name: host-nix-socket
              mountPath: /nix/var/nix/daemon-socket/socket
            - name: hostfs
              mountPropagation: HostToContainer
              mountPath: /hostfs
            #- name: hostfs
            #  subPath: dev/
            #  mountPropagation: HostToContainer
            #  mountPath: /dev
          livenessProbe:
            periodSeconds: 3
            exec:
              command:
                - test
                - -S
                - /nix/var/nix/daemon-socket/socket

      volumes:
        - name: src
          configMap:
            name: nix-disks-src
        - name: etc-nix
          projected:
            sources:
              - configMap:
                  name: nix-files
              - secret:
                  name: nix-files
        - name: host-nix-store
          hostPath:
            path: /var/lib/nix/store
        - name: hostfs
          hostPath:
            path: /
        - name: host-nix-socket
          hostPath:
            type: Socket
            path: /var/lib/nix/var/nix/daemon-socket/socket

