apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nix-disks
  namespace: nix-system
  labels:
    k8s-app: nix-disks
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: "100%"
  selector:
    matchLabels:
      name: nix-disks
  template:
    metadata:
      labels:
        name: nix-disks
    spec:
      terminationGracePeriodSeconds: 5
      tolerations:
        # these tolerations are to have the daemonset runnable on control plane nodes
        # remove them if your control plane nodes should not run pods
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      initContainers:
        - name: wait-nix-daemon
          image: docker.io/nixos/nix
          command: ["/usr/bin/env", "bash"]
          args:
            - '-c'
            - |-
              set -xeEuo pipefail
              until test -S /nix/var/nix/daemon-socket/socket ; do
                sleep $((RANDOM % 3))
              done
          volumeMounts:
            - name: host-nix-socket-dir
              mountPath: /nix/var/nix/daemon-socket
          resources:
            limits:
              memory: 16Mi
            requests:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: nix
          image: docker.io/nixos/nix
          command: ["/usr/bin/env", "bash"]
          args: ["/nix-disks/src/container-entrypoint.sh"]
          workingDir: /root
          securityContext:
            privileged: true
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 50m
              memory: 32Mi
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: nix-client-env
            - secretRef:
                name: nix-client-env
          volumeMounts:
            - name: fhs-run
              # `cryptsetup` doesn't like missing /run/cryptsetup
              mountPath: /run
            - name: src
              mountPath: /nix-disks/src
            - name: passphrases
              mountPath: /nix-disks/passphrases
            - name: etc-nix
              mountPath: /etc/nix
            - name: host-nix-store
              mountPath: /nix/store
            - name: host-nix-socket-dir
              mountPath: /nix/var/nix/daemon-socket
            - name: host-dev
              subPath: disk
              mountPath: /dev/disk
            - name: host
              mountPropagation: HostToContainer
              mountPath: /host
          livenessProbe:
            periodSeconds: 3
            exec:
              command:
                - test
                - -S
                - /nix/var/nix/daemon-socket/socket
          readinessProbe:
            periodSeconds: 3
            exec:
              command:
                - test
                - -L
                - /nix-disks/devshell

      volumes:
        - name: fhs-run
          emptyDir:
            medium: "Memory"
        - name: src
          configMap:
            name: nix-disks-src
        - name: passphrases
          secret:
            secretName: nix-disks-passphrases
        - name: etc-nix
          projected:
            sources:
              - configMap:
                  name: nix-files
              - secret:
                  name: nix-files
        - name: host-nix-store
          hostPath:
            type: Directory
            path: /var/lib/nix/store
        - name: host
          hostPath:
            path: /
        - name: host-dev
          hostPath:
            type: Directory
            path: /dev
        - name: host-nix-socket-dir
          hostPath:
            type: Directory
            path: /var/lib/nix/var/nix/daemon-socket

